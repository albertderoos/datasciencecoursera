?oauth_app
install.packages("httr")
library("httr")
myapp <- oauth_app("github", key = "c952a18449c4c55f175f", secret = "02dc473d35e3c57fba39d367fd71e211a6e58560")
homeTL = GET("https://api.github.com/users/jtleek/repos")
str(homeTL)
names(homeTL)
head(homeTL)
class(homeTL)
library(XML)
url <- "https://api.github.com/users/jtleek/repos"
url <- "https://api.github.com/users/jtleek/repos"
htmlTreeParse(url, useInternalNodes = TRUE)
html <- htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(html, "//repos", xmlValue)
xpathSApply(html, "//repo", xmlValue)
str(homeTL)
json1 <- content(homeTL)
json2 <- jsonlite::fromJSON(toJSON(json1))
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("httr")
json2 <- jsonlite::fromJSON(toJSON(json1))
json2 <- jsonlite::fromJSON(json1)
json1 <- content(homeTL)
json2 <- jsonlite::fromJSON(json1)
json1
names(json1)
json2 <- fromJSON(json1)
install.packages("httr")
library("httr")
library(httr)
library("jsonlite"")
json2 <- fromJSON(json1)
names(json2)
names(json2)
json2 <- fromJSON(json1)
names(json1)
json1
json2 <- fromJSON(url)
library("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
library("jsonlite")
json2 <- fromJSON(url)
names(json2)
names(json2$name)
names(json2$id)
names(json2$owner)
names(json2$full_name)
names(json2[["full_name"]]
)
names(json2)
json2[1]
json2[3]
json2[full_name]
json2["full_name"]
json2["full_name", "created_at"]
json2["created_at"]
json2["created_at", "created_at"]
json2["created_at"]
class(json2)
json2[json2$full_name == "datasharing" && json2$created_at]
json2[json2$full_name == "datasharing" & json2$created_at]
json2[json2$full_name == "datasharing"]
json2
json2[json2$full_name == "datasharing", json2$created_at]
json2
json2[json2$full_name == "datasharing", "created_at"]
json2
json2[json2$full_name == "datasharing", json2$"created_at"]
json2
json3 <- json2[json2$full_name == "datasharing", json2$"created_at"]
json3
json3 <- json2[json2$full_name == "datasharing", json2$created_at]
json3
json3 <- json2[json2$full_name == "datasharing", json2$"created_at"]
json3
json3 <- json2[json2$full_name == "datasharing", "created_at"]
json3
names(json2)
json3 <- json2[, "created_at"]
json3
json3 <- json2[, "full_name"]
json3
json3 <- json2[json2$full_name == "jtleek.datasharing", "created_at"]
json3
json3 <- json2[json2$full_name == "jtleek/datasharing", "created_at"]
json3
install.packages("sqldb")
install.packages("sqldf")
library("sqldf")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "acsdata.csv")
acs <- read.csv("acsdata.csv", colClasses = "character")
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs" limit 10)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1, AGEP from acs where AGEP < 50")
unique(acs$AGEP)
unique(order(acs$AGEP))
unique((acs$AGEP))
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlcode
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
nchar
?nchar
CharsPerLine <- ncar(htmlCode)
CharsPerLine[c(10, 20, 30, 100)]
CharsPerLine <- nchar(htmlCode)
CharsPerLine[c(10, 20, 30, 100)]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "data.for")
acs <- read.fwf("data.for", skip = 4, col.names =c("Week", "Nino1+2", "Nino3", "Nino34", "Nino4"))
acs <- read.fwf("data.for", skip = 4, col.names =c("Week", "Nino1+2", "Nino3", "Nino34", "Nino4"), widths = 5)
acs <- read.fwf("data.for", skip = 4, col.names =c("Week", "Nino1+2", "Nino3", "Nino34", "Nino4"), widths = c(-1, 9, -5, 8, -5, 8, -5, 8, -5, 8))
acs
acs <- read.fwf("data.for", skip = 4, widths = c(-1, 9, -5, 4, 4, -5, 4,4, -5, 4,4, -5, 4,4))
acs
sum(acs$V4)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "acs.csv")
acs <- read.csv("acs.csv")
names(acs)
View(acs)
splitnames <- strsplit(acs, "wgtp")
splinames[123,]
splitnames <- strsplit(names(acs), "wgtp")
splitnames[123,]
splitnames <- strsplit(names(acs), "wgtp")
splitnames[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv.csv", "gdp.csv")
gdp <- read.csv("gdp.csv")
names(gdp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv.csv", "gdp.csv")
gdp <- read.csv("gdp.csv")
names(gdp)
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv.csv", "gdp.csv", method = "curl")
gdp <- read.csv("gdp.csv")
names(gdp)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl")
gdp <- read.csv("gdp.csv")
names(gdp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl")
gdp <- read.csv("gdp.csv", colClasses = "character")
names(gdp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl", mode = "wb")
gdp <- read.csv("gdp.csv", colClasses = "character")
names(gdp)
setwd("C:/Users/Desktop/datasciencecoursera")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl", mode = "wb")
gdp <- read.csv("gdp.csv", colClasses = "character")
names(gdp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl", mode = "wb")
gdp <- read.csv("gdp.csv", colClasses = "character")
names(gdp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv", method = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
gdp <- read.csv("gdp.csv", colClasses = "character")
names(gdp)
View(acs)
View(gdp)
cleangdp <- gsub(",", "", gdp[, gdp$X.3])
meangdp <- mean(cleangdp$X.3)
cleangdp <- gsub(",", "", gdp[, gdp$"X.3"])
meangdp <- mean(cleangdp$X.3)
cleangdp <- gsub(",", "", gdp[, gdp$5])
meangdp <- mean(cleangdp$X.3)
?gsub
cleangdp <- gsub(",", "", gdp[, [gdp$5])
meangdp <- mean(cleangdp$X.3)
library(dplyr)
myvector <- select(gdp, X.3)
cleangdp <- gsub(",", "", myvector)
meangdp <- mean(as.numeric(myvector))
myvector <- select(gdp, X.3)
myvector
cleangdp <- gsub(",", "", myvector)
cleangdp
cleangdp <- gsub(",", '', myvector)
cleangdp
View(gdp)
head(cleangdp)
?read.cvs
?rread.csv
?read.csv
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
gdp <- read.csv("gdp.csv", colClasses = "character", skip = 4)
names(gdp)
View(gdp)
cleangdp <- gsub(",", '', myvector, fixed = TRUE)
cleangdp
gdpclean <- gdp %>%
select(c(X, X1, X3, X4)) %>%
filter(1:231) %>%
gsub(",", '', fixed = TRUE)
gdpclean <- gdp %>%
select(c("X", "X1", "X3", "X4")) %>%
filter(1:231) %>%
gsub(",", '', fixed = TRUE)
gdpclean <- gdp %>%
select(c(X, X.1, X.3, X.4)) %>%
filter(1:231) %>%
gsub(",", '', fixed = TRUE)
gdpclean <- gdp %>%
select(c(X, X.1, X.3, X.4)) %>%
filter(1:231)
gdpclean <- gdp %>%
select(c(X, X.1, X.3, X.4)) %>%
slice(1:231)
gdpclean
View(gdp)
View(gdp)
View(gdp)
gdpclean <- gdp %>%
select(c(X, X.1, X.3, X.4)) %>%
slice(1:190)
gdpclean
trans <- gsub(",", '', gdpclean$X.4, fixed = TRUE)
colMeans(trans, na.rm = TRUE)
trans <- gsub(",", '', gdpclean$X.4, fixed = TRUE)
mean(trans, na.rm = TRUE)
trans
trans <- gsub(",", '', gdpclean$X.4, fixed = TRUE)
trans
mean(as.numeric(trans), na.rm = TRUE)
View(gdp)
grep("^United",gdpclean$X.3), 3
grep("^United",gdpclean$X.3)
?grep
grep("^United",gdpclean$X.3, value = TRUE)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
gdp <- read.csv("gdp.csv", colClasses = "character", skip = 4)
names(gdp)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "edu.csv")
edu <- read.csv("edu.csv", ccolClasses = "character")
names(edu)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "edu.csv")
edu <- read.csv("edu.csv", colClasses = "character")
names(edu)
library(dplyr)
?merge
names(gdp)
View(gdp)
View(gdp)
combined <- merge(gdp, edu, by = c("X", "CountryCode"))
dim(gdp)
dim(edu)
dim(combined)
combined <- merge(gdp, edu, by.x = "X", by.y = "CountryCode"))
dim(gdp)
dim(edu)
dim(combined)
combined <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
dim(gdp)
dim(edu)
dim(combined)
View(edu)
trans <- grep("June", combined$Special.Notes, fixed = TRUE)
trans
length(trans)
View(combined)
View(gdp)
filter1 <- filter(combined, X1 != "")
filter1 <- filter(combined, X.1 != "")
filter1
trans <- grep("June", filter1$Special.Notes, fixed = TRUE)
length(trans)
combined <- merge(gdp, edu, by.x = "X", by.y = "CountryCode", all = TRUE)
filter1 <- filter(combined, X.1 != "")
filter1
trans <- grep("June", filter1$Special.Notes, fixed = TRUE)
length(trans)
trans <- grep("June", filter1$Special.Notes, fixed = TRUE, value = TRUE)
trans
trans <- grep("June"|"F|fiscal year", filter1$Special.Notes, fixed = TRUE, value = TRUE)
trans <- grep("June"|"iscal year", filter1$Special.Notes, fixed = TRUE, value = TRUE)
trans
trans <- grep("June"|"iscal year end", filter1$Special.Notes, fixed = TRUE, value = TRUE)
trans
trans <- grep("Fiscal year end: June", filter1$Special.Notes, fixed = TRUE, value = TRUE)
trans
nrow(trans)
length(trans)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
library(lubridate)
year1 <-year(sampleTimes); year1
count2012 <- length(year1["2012"]); count2012
count2012 <- year1["2012"]; count2012
count2012 <- year1[2012]; count2012
day1 <- day(sampleTimes); day1
countmondays <- day1["Monday"]; countmondays
countmondays2 <- day1[2]; countmondays2
head(sampleTimes)
day1 <- day(sampleTimes); day1
countmondays <- wday1["Monday"]; countmondays
countmondays2 <- wday1[2]; countmondays2
wday1 <- day(sampleTimes); day1
countmondays <- wday1["Monday"]; countmondays
countmondays2 <- wday1[2]; countmondays2
wday1 <- wday(sampleTimes); day1
countmondays <- wday1["Monday"]; countmondays
countmondays2 <- wday1[2]; countmondays2
wday1 <- wday(sampleTimes); wday1
countmondays <- wday1["Monday"]; countmondays
countmondays2 <- wday1[2]; countmondays2
wday1 <- wday(sampleTimes, label = TRUE); wday1
class(wday1)
class(wday1)
countmondays <- wday1["Mon"]; countmondays
countmondays <- wday1[Mon]; countmondays
countmondays <- wday1["Mon"]; countmondays
countmondays <- wday1[2]; countmondays
wday1 <- wday(sampleTimes); wday1
countmondays <- wday1[2]; countmondays
countmondays2 <- wday1[2]; countmondays2
countmondays2 <- wday1[2]; length(countmondays2)
countmondays <- wday1[[2]]; countmondays
countmondays <- wday1["2"]; countmondays
wday1 <- wday(sampleTimes); wday1
mondays <- wday1["2"]; mondays
countmondays2 <- wday1[2]; length(countmondays2)
mondays <- wday1[2]; mondays
mondays <- wday1[[2]; mondays
mondays <- wday1[[2]]; mondays
sum(wday == 2)
sum(wday = 2)
sum(wday1 = 2)
wday1 <- wday(sampleTimes); wday1
class(wday1)
sum(wday1 = 2L)
summarize(wday1)
mondays <- sapply(mondays)
wday1 <- wday(sampleTimes); wday1
install.packages("quantmod")
install.packages("quantmod")
wday1 <- wday(sampleTimes); wday1
wday1[wday == 2]
wday1 <- wday(sampleTimes); wday1
wday1[wday1 == 2]
length(wday1[wday1 == 2])
year1 <-year(sampleTimes); year1
count2012 <- year1[year1 == 2012]; count2012 ## 2014
year1 <-year(sampleTimes); year1
count2012 <- year1[year1 == 2012]; count2012 ## 2014
lenght(count2012)
year1 <-year(sampleTimes); year1
count2012 <- year1[year1 == 2012]; count2012 ## 2014
length(count2012)
